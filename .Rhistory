plot(as.numeric(scale(d$Divorce)) ~ mu_resid, main = 'Predictor Residual Plot', xlab="Marriage rate residuals", ylab = "Divorce Rate (std)")
abline(as.numeric(scale(d$Divorce)) ~ mu_resid, add = TRUE, col = 'red') #x not specified... weird...
plot(as.numeric(scale(d$Divorce)) ~ mu_resid, main = 'Predictor Residual Plot', xlab="Marriage rate residuals", ylab = "Divorce Rate (std)")
abline(as.numeric(scale(d$Divorce)) ~ mu_resid, col = 'red') #x not specified... weird...
plot(as.numeric(scale(d$Divorce)) ~ mu_resid, main = 'Predictor Residual Plot', xlab="Marriage rate residuals", ylab = "Divorce Rate (std)")
abline(lm(as.numeric(scale(d$Divorce)) ~ mu_resid), col = 'red') #x not specified... weird...
setwd("./3. Multivariate Continuous")
writeLines(readLines("stan_model2.stan"))
fit2 <- stan(file='stan_model2.stan', data=data, seed=194838, chains = 1, warmup=1000, iter=10000)
posterior2 <- as.data.frame(fit2)
setwd("./3. Multivariate Continuous")
writeLines(readLines("stan_model2.stan"))
fit2 <- stan(file='stan_model2.stan', data=data, seed=194838, chains = 1, warmup=1000, iter=10000)
writeLines(readLines("stan_model2.stan"))
setwd("./3. Multivariate Continuous")
writeLines(readLines("stan_model2.stan"))
fit2 <- stan(file='stan_model2.stan', data=data, seed=194838, chains = 1, warmup=1000, iter=10000)
posterior2 <- as.data.frame(fit2)
obj <- apply(posterior2, 2, mean )
View(posterior2)
mus <- obj[-c(1:3, 54)] #select mu's only
mu_resid <- as.numeric(scale(d$Marriage)) - mus
View(posterior2)
View(data)
mu.link <- function(marriage) posterior2$a + posterior2$bA*(as.numeric(scale(age)))
mu.link <- posterior2$a + posterior2$bA*(as.numeric(scale(age)))
mu.link <- function(marriage) posterior2$a + posterior2$bA*(as.numeric(scale(age)))
age.seq <- seq( from=-3 , to=3 , by=.1 )
mu <- sapply( age.seq , mu.link )
mu_mean <- apply(mu, 2, mean)
hist(mu_mean)
View(data)
mu_resid <- as.numeric(scale(d$MedianAgeMarriage)) - mu_mean
mu.link <- posterior2$a + posterior2$bA*(as.numeric(scale(d$MedianAgeMarriage)))
mu.link <- mean(posterior2$a) + mean(posterior2$bA)*(as.numeric(scale(d$MedianAgeMarriage)))
mu_resid <- as.numeric(scale(d$MedianAgeMarriage)) - mu_mean
mu_link <- mean(posterior2$a) + mean(posterior2$bA)*(as.numeric(scale(d$MedianAgeMarriage)))
mu_resid <- as.numeric(scale(d$MedianAgeMarriage)) - mu_mean
mu_mean <- mean(posterior2$a) + mean(posterior2$bA)*(as.numeric(scale(d$MedianAgeMarriage)))
mu_resid <- as.numeric(scale(d$MedianAgeMarriage)) - mu_mean
plot(as.numeric(scale(d$Divorce)) ~ mu_resid, main = 'Predictor Residual Plot', xlab="Marriage rate residuals", ylab = "Divorce Rate (std)")
abline(lm(as.numeric(scale(d$Divorce)) ~ mu_resid), col = 'red') #x not specified... weird...
plot(as.numeric(scale(d$Divorce)) ~ mu_resid, main = 'Predictor Residual Plot', xlab="Marriage rate residuals", ylab = "Divorce Rate (std)")
abline(lm(as.numeric(scale(d$Divorce)) ~ mu_resid), col = 'red') #x not specified... weird...
View(data)
mu_mean <- mean(posterior2$a) + mean(posterior2$bA)*(as.numeric(scale(data$age)))
mu_resid <- as.numeric(scale(d$MedianAgeMarriage)) - mu_mean
plot(as.numeric(scale(d$Divorce)) ~ mu_resid, main = 'Predictor Residual Plot', xlab="Marriage rate residuals", ylab = "Divorce Rate (std)")
mu_mean <- mean(posterior2$a) + mean(posterior2$bA)*(data$age)
mu_resid <- as.numeric(scale(d$MedianAgeMarriage)) - mu_mean
plot(as.numeric(scale(d$Divorce)) ~ mu_resid, main = 'Predictor Residual Plot', xlab="Marriage rate residuals", ylab = "Divorce Rate (std)")
mu_mean <- mean(posterior2$a) + mean(posterior2$bA)*(as.numeric(scale(data$age)))
mu_resid <- as.numeric(scale(data$age)) - mu_mean
plot(as.numeric(scale(d$Divorce)) ~ mu_resid, main = 'Predictor Residual Plot', xlab="Marriage rate residuals", ylab = "Divorce Rate (std)")
setwd("./3. Multivariate Continuous")
writeLines(readLines("stan_model2.stan"))
fit2 <- stan(file='stan_model2.stan', data=data, seed=194838, chains = 1, warmup=1000, iter=10000)
posterior2 <- as.data.frame(fit2)
obj <- posterior2[-c(1:3, 54)] #select mu's only
posterior2 <- as.data.frame(fit2)
posterior2 <- posterior2[-c(1:3, 54)] #select mu's only
mu_mean <- mean(posterior2$a) + mean(posterior2$bA)*(as.numeric(scale(data$age)))
knitr::opts_chunk$set(echo = TRUE)
library(rethinking)
library(rstan)
setwd("./3. Multivariate Continuous")
data(WaffleDivorce)
d <- WaffleDivorce
age <- as.numeric(d$MedianAgeMarriage)
divorce <- as.numeric(d$Divorce)
N <- length(d$Divorce)
marriage_proportion <- as.numeric(d$Marriage) #proportion
stan_rdump(c("divorce", "age", "N", "marraige_proportion"), file="linear_reg.data.R")
data <- read_rdump("linear_reg.data.R")
setwd("./3. Multivariate Continuous")
writeLines(readLines("stan_model.stan"))
setwd("./3. Multivariate Continuous")
fit <- stan(file='stan_model.stan', data=data, seed=194838, chains = 1, warmup=1000, iter=10000)
print(fit, c("a", "bM", "bA", "sigma"))
plot(fit)
posterior <- as.data.frame(fit)
head(posterior)
setwd("./3. Multivariate Continuous")
writeLines(readLines("stan_model2.stan"))
fit2 <- stan(file='stan_model2.stan', data=data, seed=194838, chains = 1, warmup=1000, iter=10000)
posterior2 <- as.data.frame(fit2)
# load data and copy
library(rethinking)
data(WaffleDivorce)
d <- WaffleDivorce
# standardize variables
d$A <- scale( d$MedianAgeMarriage )
d$D <- scale( d$Divorce )
d$M <- scale( d$Marriage )
m5.3 <- quap(
alist(
D ~ dnorm( mu , sigma ) ,
mu <- a + bM*M + bA*A ,
a ~ dnorm( 0 , 0.2 ) ,
bM ~ dnorm( 0 , 0.5 ) ,
bA ~ dnorm( 0 , 0.5 ) ,
sigma ~ dexp( 1 )
) , data = d )
precis( m5.3 )
m5.4 <- quap(
alist(
M ~ dnorm( mu , sigma ) ,
mu <- a + bAM * A ,
a ~ dnorm( 0 , 0.2 ) ,
bAM ~ dnorm( 0 , 0.5 ) ,
sigma ~ dexp( 1 )
) , data = d )
mu <- link(m5.4)
mu_mean <- apply( mu , 2 , mean )
mu_resid <- d$M - mu_mean
plot(as.numeric(scale(d$Divorce)) ~ mu_resid, main = 'Predictor Residual Plot', xlab="Marriage rate residuals", ylab = "Divorce Rate (std)")
abline(lm(as.numeric(scale(d$Divorce)) ~ mu_resid), col = 'red') #x not specified... weird...
mu_resid_rethinking <- mu_resid
setwd("./3. Multivariate Continuous")
data(WaffleDivorce)
d <- WaffleDivorce
age <- as.numeric(d$MedianAgeMarriage)
divorce <- as.numeric(d$Divorce)
N <- length(d$Divorce)
marriage_proportion <- as.numeric(d$Marriage) #proportion
stan_rdump(c("divorce", "age", "N", "marraige_proportion"), file="linear_reg.data.R")
data <- read_rdump("linear_reg.data.R")
setwd("./3. Multivariate Continuous")
writeLines(readLines("stan_model2.stan"))
fit2 <- stan(file='stan_model2.stan', data=data, seed=194838, chains = 1, warmup=1000, iter=10000)
posterior2 <- as.data.frame(fit2)
posterior2 <- posterior2[-c(1:3, 54)] #select mu's only
mu_mean_rethinking <- mu_mean
mu_mean <- mean(posterior2$a) + mean(posterior2$bA)*(as.numeric(scale(data$age)))
posterior2 <- posterior2[-c(1:3, 54)] #select mu's only
mu_mean <- mean(posterior2$a) + mean(posterior2$bA)*(as.numeric(scale(data$age)))
setwd("./3. Multivariate Continuous")
fit <- stan(file='stan_model.stan', data=data, seed=194838, chains = 1, warmup=1000, iter=10000)
print(fit, c("a", "bM", "bA", "sigma"))
plot(fit)
posterior <- as.data.frame(fit)
head(posterior)
setwd("./3. Multivariate Continuous")
writeLines(readLines("stan_model2.stan"))
fit2 <- stan(file='stan_model2.stan', data=data, seed=194838, chains = 1, warmup=1000, iter=10000)
posterior2 <- as.data.frame(fit2)
posterior2 <- posterior2[-c(1:3, 54)] #select mu's only
mu_mean <- mean(posterior2$a) + mean(posterior2$bA)*(as.numeric(scale(data$age)))
View(data)
View(posterior2)
setwd("./3. Multivariate Continuous")
writeLines(readLines("stan_model2.stan"))
fit2 <- stan(file='stan_model2.stan', data=data, seed=194838, chains = 1, warmup=1000, iter=10000)
posterior2 <- as.data.frame(fit2)
mu_mean <- mean(posterior2$a) + mean(posterior2$bA)*(as.numeric(scale(data$age)))
plot(mu_mean ~ mu_mean_rethinking)
mu_resid <- as.numeric(scale(d$MedianAgeMarriage)) - mu_mean
mu_resid <- d$M - mu_mean
View(d)
mu_resid <- as.numeric(scale(d$Marriage)) - mu_mean
plot(as.numeric(scale(d$Divorce)) ~ mu_resid, main = 'Predictor Residual Plot', xlab="Marriage rate residuals", ylab = "Divorce Rate (std)")
abline(lm(as.numeric(scale(d$Divorce)) ~ mu_resid), col = 'red') #x not specified... weird...
setwd("./3. Multivariate Continuous")
data(WaffleDivorce)
d <- WaffleDivorce
age <- as.numeric(d$MedianAgeMarriage)
divorce <- as.numeric(d$Divorce)
N <- length(d$Divorce)
marriage_proportion <- as.numeric(d$Marriage) #proportion
stan_rdump(c("divorce", "age", "N", "marraige_proportion"), file="linear_reg.data.R")
data <- read_rdump("linear_reg.data.R")
setwd("./3. Multivariate Continuous")
writeLines(readLines("stan_model.stan"))
setwd("./3. Multivariate Continuous")
fit <- stan(file='stan_model.stan', data=data, seed=194838, chains = 1, warmup=1000, iter=10000)
print(fit, c("a", "bM", "bA", "sigma"))
plot(fit)
posterior <- as.data.frame(fit)
head(posterior)
setwd("./3. Multivariate Continuous")
writeLines(readLines("stan_model2.stan"))
fit2 <- stan(file='stan_model2.stan', data=data, seed=194838, chains = 1, warmup=1000, iter=10000)
posterior2 <- as.data.frame(fit2)
mu_mean <- mean(posterior2$a) + mean(posterior2$bA)*(as.numeric(scale(data$age)))
mu_resid <- as.numeric(scale(d$Marriage)) - mu_mean
plot(as.numeric(scale(d$Divorce)) ~ mu_resid, main = 'Predictor Residual Plot', xlab="Marriage rate residuals", ylab = "Divorce Rate (std)")
abline(lm(as.numeric(scale(d$Divorce)) ~ mu_resid), col = 'red') #x not specified... weird...
mu_mean_matrix <- posterior2$a + posterior2$bA*(as.numeric(scale(data$age)))
mu.link <- function(data$age) posterior2$a + posterior2$bA*(as.numeric(scale(data$age)))
mu.link <- function(age) posterior2$a + posterior2$bA*(as.numeric(scale(data$age)))
mu_age <- sapply( data$age , mu.link )
mu.PI <- apply( mu_age , 2 , PI , prob=0.89 )
plot( height ~ weight , data=d , col=col.alpha(rangi2,0.5) ) # plot raw data
plot(as.numeric(scale(d$Divorce)) ~ mu_resid, main = 'Predictor Residual Plot', xlab="Marriage rate residuals", ylab = "Divorce Rate (std)")
abline(lm(as.numeric(scale(d$Divorce)) ~ mu_resid), col = 'red') #x not specified... weird...
shade( mu.PI , data$age ) # plot a shaded region for 89% HPDI
plot(as.numeric(scale(d$Divorce)) ~ mu_resid, main = 'Predictor Residual Plot', xlab="Marriage rate residuals", ylab = "Divorce Rate (std)")
abline(lm(as.numeric(scale(d$Divorce)) ~ mu_resid), col = 'red') #x not specified... weird...
shade( mu.PI , as.numeric(scale(data$age)) ) # plot a shaded region for 89% HPDI
mu.link <- function(age) posterior2$a + posterior2$bA*(as.numeric(scale(data$age)))
mu_age <- sapply( as.numeric(scale(data$age)) , mu.link )
mu.PI <- apply( mu_age , 2 , PI , prob=0.89 )
plot(as.numeric(scale(d$Divorce)) ~ mu_resid, main = 'Predictor Residual Plot', xlab="Marriage rate residuals", ylab = "Divorce Rate (std)")
abline(lm(as.numeric(scale(d$Divorce)) ~ mu_resid), col = 'red') #x not specified... weird...
shade( mu.PI , as.numeric(scale(data$age)) ) # plot a shaded region for 89% HPDI
View(mu_age)
dim(mu_age)
mu.PI
dim(mu_age)
View(mu_age)
mu.link <- function(age) posterior2$a + posterior2$bA*(data$age)
mu_age <- sapply( as.numeric(scale(data$age)) , mu.link )
mu.PI <- apply( mu_age , 2 , PI , prob=0.89 )
plot(as.numeric(scale(d$Divorce)) ~ mu_resid, main = 'Predictor Residual Plot', xlab="Marriage rate residuals", ylab = "Divorce Rate (std)")
abline(lm(as.numeric(scale(d$Divorce)) ~ mu_resid), col = 'red') #x not specified... weird...
shade( mu.PI , as.numeric(scale(data$age)) ) # plot a shaded region for 89% HPDI
mu.link <- function(age) posterior2$a + posterior2$bA*(as.numeric(scale(data$age)))
plot(as.numeric(scale(d$Divorce)) ~ mu_resid, main = 'Predictor Residual Plot', xlab="Marriage rate residuals", ylab = "Divorce Rate (std)")
abline(lm(as.numeric(scale(d$Divorce)) ~ mu_resid), col = 'red') #x not specified... weird...
shade( mu.PI , as.numeric(scale(data$age)) ) # plot a shaded region for 89% HPDI
resid_seq <- seq(-1.5:2, by = .1)
resid_seq <- seq(-1.5,2, by = .1)
mu_age <- sapply( resid_seq , mu.link )
mu.PI <- apply( mu_age , 2 , PI , prob=0.89 )
plot(as.numeric(scale(d$Divorce)) ~ mu_resid, main = 'Predictor Residual Plot', xlab="Marriage rate residuals", ylab = "Divorce Rate (std)")
abline(lm(as.numeric(scale(d$Divorce)) ~ mu_resid), col = 'red') #x not specified... weird...
shade( mu.PI , as.numeric(scale(data$age)) ) # plot a shaded region for 89% HPDI
plot(as.numeric(scale(d$Divorce)) ~ mu_resid, main = 'Predictor Residual Plot', xlab="Marriage rate residuals", ylab = "Divorce Rate (std)")
abline(lm(as.numeric(scale(d$Divorce)) ~ mu_resid), col = 'red') #x not specified... weird...
shade( mu.PI , resid_seq ) # plot a shaded region for 89% HPDI
View(mu_age)
View(posterior2)
View(mu_age)
dim(mu_age)
mu.link <- function(age) posterior2$a + posterior2$bA*(x)
mu.link <- function(x) posterior2$a + posterior2$bA*(x)
resid_seq <- seq(-1.5,2, by = .1)
mu_age <- sapply( resid_seq , mu.link )
dim(mu_age)
mu.PI <- apply( mu_age , 2 , PI , prob=0.89 )
View(mu_age)
plot(as.numeric(scale(d$Divorce)) ~ mu_resid, main = 'Predictor Residual Plot', xlab="Marriage rate residuals", ylab = "Divorce Rate (std)")
abline(lm(as.numeric(scale(d$Divorce)) ~ mu_resid), col = 'red') #x not specified... weird...
shade( mu.PI , resid_seq ) # plot a shaded region for 89% HPDI
mu.link <- function(x) posterior2$a + posterior2$bA*(x)
mu_age <- sapply( as.numeric(scale(data$age)) , mu.link )
mu.PI <- apply( mu_age , 2 , PI , prob=0.89 )
mu.link <- function(x) posterior2$a + posterior2$bA*(x)
resid_seq <- seq(-1.5,2, by = .1)
mu_age <- sapply( as.numeric(scale(data$age)) , mu.link )
mu.PI <- apply( mu_age , 2 , PI , prob=0.89 )
plot(as.numeric(scale(d$Divorce)) ~ mu_resid, main = 'Predictor Residual Plot', xlab="Marriage rate residuals", ylab = "Divorce Rate (std)")
abline(lm(as.numeric(scale(d$Divorce)) ~ mu_resid), col = 'red') #x not specified... weird...
shade( mu.PI , as.numeric(scale(data$age)) ) # plot a shaded region for 89% HPDI
plot(as.numeric(scale(d$Divorce)) ~ mu_resid, main = 'Predictor Residual Plot', xlab="Marriage rate residuals", ylab = "Divorce Rate (std)")
abline(lm(as.numeric(scale(d$Divorce)) ~ mu_resid), col = 'red') #x not specified... weird...
shade( mu.PI , resid_seq ) # plot a shaded region for 89% HPDI
plot(as.numeric(scale(d$Divorce)) ~ mu_resid, main = 'Predictor Residual Plot', xlab="Marriage rate residuals", ylab = "Divorce Rate (std)")
abline(lm(as.numeric(scale(d$Divorce)) ~ mu_resid), col = 'red') #x not specified... weird...
shade( mu.PI , as.numeric(scale(data$age)) ) # plot a shaded region for 89% HPDI
knitr::opts_chunk$set(echo = TRUE)
library(rethinking)
library(rstan)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
setwd("./2. linear regression")
writeLines(readLines("linear_regression.stan"))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(rethinking)
library(rstan)
N <- 100 # 100 lines
a <- rnorm( N , 178 , 20 ) #prior for alpha
plot(density(a))
plot(density(a), main = "Prior for Alpha", xlab = "Height in cm")
set.seed(2971)
N <- 100 # 100 lines
a <- rnorm( N , 178 , 20 ) #prior for alpha
b <- rlnorm( N , 0 , 1 ) #log normal prior for beta, to restrict effect of weight on height to be positive
plot(NULL, xlim=range(d$weight), ylim=c(-100,400), xlab="weight", ylab="height" )
setwd("./2. linear regression")
data(Howell1)
d <- Howell1
d <- d[ d$age >= 18 , ]
xbar <- mean(d$weight)
N = length(d$weight)
height <- as.numeric(d$height)
weight <- as.numeric(d$weight)
stan_rdump(c("height", "N", "weight", "xbar"), file="linear_reg.data.R")
data <- read_rdump("linear_reg.data.R") #import data
set.seed(2971)
N <- 100 # 100 lines
a <- rnorm( N , 178 , 20 ) #prior for alpha
b <- rlnorm( N , 0 , 1 ) #log normal prior for beta, to restrict effect of weight on height to be positive
#plot
plot(NULL, xlim=range(d$weight), ylim=c(-100,400), xlab="weight", ylab="height" )
abline(h=0, lty=2); abline(h=272, lty=1, lwd=0.5)
mtext("b ~ dlnorm(0,10)")
xbar <- mean(d$weight)
for (i in 1:N )
curve(a[i] + b[i]*(x - xbar),
from=min(d$weight), to=max(d$weight), add=TRUE, col=col.alpha("black",0.2))
#plot
plot(NULL, xlim=range(d$weight), ylim=c(-100,400), xlab="weight", ylab="height" )
abline(h=0, lty=2); abline(h=272, lty=1, lwd=0.5)
plot(NULL, xlim=range(d$weight), ylim=c(-100,400), xlab="weight", ylab="height" )
abline(h=0, lty=2); abline(h=272, lty=1, lwd=0.5)
mtext("b ~ dlnorm(0,10)")
xbar <- mean(d$weight)
View(d)
plot(NULL, xlim=range(d$weight), ylim=c(-100,400), xlab="weight", ylab="height" )
abline(h=0, lty=2); abline(h=272, lty=1, lwd=0.5)
mtext("b ~ dlnorm(0,10)")
xbar <- mean(d$weight)
for (i in 1:N )
curve(a[i] + b[i]*(x - xbar),
from=min(d$weight), to=max(d$weight), add=TRUE, col=col.alpha("black",0.2))
?readLines
setwd("./2. linear regression")
writeLines(readLines("linear_regression.stan"))
setwd("./2. linear regression")
data(Howell1)
d <- Howell1
d <- d[ d$age >= 18 , ]
xbar <- mean(d$weight)
N = length(d$weight)
height <- as.numeric(d$height)
weight <- as.numeric(d$weight)
stan_rdump(c("height", "N", "weight", "xbar"), file="linear_reg.data.R")
data <- read_rdump("linear_reg.data.R") #import data
N <- 100 # 100 lines
a <- rnorm( N , 178 , 20 ) #prior for alpha
plot(density(a), main = "Prior for Alpha", xlab = "Height in cm")
set.seed(2971)
N <- 100 # 100 lines
a <- rnorm( N , 178 , 20 ) #prior for alpha
b <- rlnorm( N , 0 , 1 ) #log normal prior for beta, to restrict effect of weight on height to be positive
#plot
plot(NULL, xlim=range(d$weight), ylim=c(-100,400), xlab="weight", ylab="height" )
abline(h=0, lty=2); abline(h=272, lty=1, lwd=0.5)
mtext("b ~ dlnorm(0,10)")
xbar <- mean(d$weight)
for (i in 1:N )
curve(a[i] + b[i]*(x - xbar),
from=min(d$weight), to=max(d$weight), add=TRUE, col=col.alpha("black",0.2))
setwd("./2. linear regression")
writeLines(readLines("linear_regression2.stan"))
writeLines(readLines("linear_regression.stan"))
setwd("./2. linear regression")
writeLines(readLines("linear_regression.stan"))
setwd("./2. linear regression")
writeLines(readLines("linear_regression2.stan"))
setwd("./2. linear regression")
fit <- stan(file='linear_regression2.stan', data=data, seed=194838, chains = 1, warmup=1000, iter=10000)
setwd("./2. linear regression")
fit <- stan(file='linear_regression2.stan', data=data, seed=194838, chains = 1, warmup=1000, iter=10000)
setwd("./2. linear regression")
writeLines(readLines("linear_regression.stan"))
setwd("./2. linear regression")
fit <- stan(file='linear_regression.stan', data=data, seed=194838, chains = 1, warmup=1000, iter=10000)
setwd("./2. linear regression")
fit <- stan(file='linear_regression.stan', data=data, seed=194838, chains = 1, warmup=1000, iter=10000)
View(fit)
print(fit, c("a", "b", "sigma")) #overview
plot(fit, pars = c("a", "b", "sigma"), ci_level = .8, show_density = TRUE) +
ggtitle("Posterior Distribution of Parameters")
plot(fit, pars = c("a", "b", "sigma"), ci_level = .9, show_density = TRUE) +
ggtitle("Posterior Distribution of Parameters")
plot(fit, pars = c("a", "b", "sigma"), ci_level = .99, show_density = TRUE) +
ggtitle("Posterior Distribution of Parameters")
plot(fit, pars = c("a", "b", "sigma"), ci_level = .95, show_density = TRUE) +
ggtitle("Posterior Distribution of Parameters")
plot(fit, pars = c("a", "b"), ci_level = .95, show_density = TRUE) +
ggtitle("Posterior Distribution of Parameters")
posterior <- as.data.frame(fit)
dim(posterior)
b.mean <- mean(posterior$b)
b.HPDI <- HPDI(posterior$b, prob = .95)
plot(density(posterior$b), main = "Posterior for Slope")
shade(density(posterior$b), c(b.HPDI[[1]], b.HPDI[[2]]))
abline(v=b.mean)
plot(d$height ~ d$weight, col=rangi2)
curve(mean(posterior$a) + mean(posterior$b) * (x-xbar), add = TRUE, col = 'red') #x not specified... weird...
#add more lines
samples <- posterior[1:20,]
for ( i in 1:20 )
curve( samples$a[i] + samples$b[i]*(x-xbar), col=col.alpha("black",0.3) , add=TRUE)
###code from before (the prior)
set.seed(2971)
N <- 20 # 100 lines
a <- rnorm( N , 178 , 20 ) #prior for alpha
b <- rlnorm( N , 0 , 1 ) #log normal prior for beta, to restrict effect of weight on height to be positive
#plot
plot(NULL, xlim=range(d$weight), ylim=c(-100,400), xlab="weight", ylab="height" )
abline(h=0, lty=2); abline(h=272, lty=1, lwd=0.5)
mtext("b ~ dlnorm(0,10)")
xbar <- mean(d$weight)
for (i in 1:N )
curve(a[i] + b[i]*(x - xbar),
from=min(d$weight), to=max(d$weight), add=TRUE, col=col.alpha("black",0.2))
###code from after (the posterior)
#samples of beta from the posterior distribution
samples <- posterior[1:20,]
for ( i in 1:20 )
curve( samples$a[i] + samples$b[i]*(x-xbar), col=col.alpha("blue",0.3) , add=TRUE)
#posterior mean for the slope coefficient
curve(mean(posterior$a) + mean(posterior$b)*(x-xbar), col = 'red', add = TRUE)
###code from before (the prior)
set.seed(2971)
N <- 20 # 100 lines
a <- rnorm( N , 178 , 20 ) #prior for alpha
b <- rlnorm( N , 0 , 1 ) #log normal prior for beta, to restrict effect of weight on height to be positive
#plot
plot(NULL, xlim=range(d$weight), ylim=c(-100,400), xlab="weight", ylab="height", "Prior and Posterior Regression Line" )
###code from before (the prior)
set.seed(2971)
N <- 20 # 100 lines
a <- rnorm( N , 178 , 20 ) #prior for alpha
b <- rlnorm( N , 0 , 1 ) #log normal prior for beta, to restrict effect of weight on height to be positive
#plot
plot(NULL, xlim=range(d$weight), ylim=c(-100,400), xlab="weight", ylab="height", main= "Prior and Posterior Regression Line" )
abline(h=0, lty=2); abline(h=272, lty=1, lwd=0.5)
mtext("b ~ dlnorm(0,10)")
xbar <- mean(d$weight)
for (i in 1:N )
curve(a[i] + b[i]*(x - xbar),
from=min(d$weight), to=max(d$weight), add=TRUE, col=col.alpha("black",0.2))
###code from after (the posterior)
#samples of beta from the posterior distribution
samples <- posterior[1:20,]
for ( i in 1:20 )
curve( samples$a[i] + samples$b[i]*(x-xbar), col=col.alpha("blue",0.3) , add=TRUE)
#posterior mean for the slope coefficient
curve(mean(posterior$a) + mean(posterior$b)*(x-xbar), col = 'red', add = TRUE)
###code from before (the prior)
set.seed(2971)
N <- 20 # 100 lines
a <- rnorm( N , 178 , 20 ) #prior for alpha
b <- rlnorm( N , 0 , 1 ) #log normal prior for beta, to restrict effect of weight on height to be positive
#plot
plot(NULL, xlim=range(d$weight), ylim=c(-100,400), xlab="weight", ylab="height", main= "Prior and Posterior Regression Line" )
abline(h=0, lty=2); abline(h=272, lty=1, lwd=0.5)
xbar <- mean(d$weight)
for (i in 1:N )
curve(a[i] + b[i]*(x - xbar),
from=min(d$weight), to=max(d$weight), add=TRUE, col=col.alpha("black",0.2))
###code from after (the posterior)
#samples of beta from the posterior distribution
samples <- posterior[1:20,]
for ( i in 1:20 )
curve( samples$a[i] + samples$b[i]*(x-xbar), col=col.alpha("blue",0.3) , add=TRUE)
#posterior mean for the slope coefficient
curve(mean(posterior$a) + mean(posterior$b)*(x-xbar), col = 'red', add = TRUE)
mu.link <- function(weight) posterior$a + posterior$b*( weight - xbar )
weight.seq <- seq( from=25 , to=70 , by=1 )
mu <- sapply( weight.seq , mu.link )
dim(mu) #same rows as iterations; same column as sequence
#calculate mean and HDPI
mu.mean <- apply( mu , 2 , mean )
mu.PI <- apply( mu , 2 , PI , prob=0.89 )
#plot
plot( height ~ weight , data=d , col=col.alpha(rangi2,0.5) ) # plot raw data
lines( weight.seq , mu.mean ) # plot the posterior regression line
shade( mu.PI , weight.seq ) # plot a shaded region for 89% HPDI
mu.link <- function(weight) posterior$a + posterior$b*( weight - xbar )
weight.seq <- seq( from=25 , to=70 , by=1 )
mu <- sapply( weight.seq , mu.link )
#dim(mu) #number of rows = number of samples; # of columns = number of observations in sequence
#calculate mean and HDPI
mu.mean <- apply( mu , 2 , mean )
mu.PI <- apply( mu , 2 , PI , prob=0.89 )
#plot
plot( height ~ weight , data=d , col=col.alpha(rangi2,0.5) ) # plot raw data
lines( weight.seq , mu.mean ) # plot the posterior regression line
shade( mu.PI , weight.seq ) # plot a shaded region for 89% HPDI
mu.link <- function(weight) posterior$a + posterior$b*( weight - xbar )
weight_80 <- 80
mu_80 <- sapply( weight_80 , mu.link )
#calculate mean and HDPI
mu.80.mean <- apply( mu_80 , 2 , mean )
mu.80.PI <- apply( mu_80 , 2 , PI , prob=0.89 )
#plot
plot(density(mu_80), main = "Mu at 80")
shade(density(mu_80), c(mu.80.PI[[1]], mu.80.PI[[2]]))
abline(v=mu.80.mean)
weight.seq <- 25:70
sim.height <- sapply( weight.seq , function(weight) #see function below
rnorm(
n=nrow(posterior) ,
mean=posterior$a + posterior$b*( weight - xbar ) ,
sd=posterior$sigma )
)
#summary stats
height.PI <- apply( sim.height , 2 , PI , prob=0.89 ) #you can also use quartile
height.mean <- apply( sim.height , 2 , mean , prob=0.89 )
#
plot( height ~ weight , d, col=col.alpha(rangi2,0.5), main="Prediction Interval" ) #plot data
lines( weight.seq , height.mean ) # regression line
shade( height.PI , weight.seq ) # prediction interval
shade( mu.PI , weight.seq ) # confidence interval
weight.80 <- 80
y_80_sim <- sapply( weight.80 , function(weight)
rnorm(
n=nrow(posterior) ,
mean=posterior$a + posterior$b*( weight - xbar ) ,
sd=posterior$sigma ) )
#calculate mean and HDPI
y.80.mean <- apply( y_80_sim , 2 , mean )
y.80.PI <- apply( y_80_sim , 2 , PI , prob=0.89 )
#plot
plot(density(y_80_sim), main = "Y at 80")
shade(density(y_80_sim), c(y.80.PI[[1]], y.80.PI[[2]]))
abline(v=y.80.mean)
